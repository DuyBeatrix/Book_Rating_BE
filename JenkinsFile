pipeline {
    agent any

    tools {
        maven 'my-maven'
    }
    environment {
        MYSQL_ROOT_LOGIN = credentials('mysql-root-login')
    }
    stages {
        stage('Build with Maven') {
            steps {
                sh 'mvn --version'
                sh 'java --version'
                sh 'mvn clean package -Dmaven.test.failure.ignore=true'
            }
        }
        stage('Packing image') {
            steps {
                withDockerRegistry(credentialsId: 'dockerhub', url: '') {
                   bat 'docker build -t duy129/springboot .'
                   bat 'docker push duy129/springboot'
                }
            }
        }
        stage('Deploy Mysql') {
            steps {
                script {
                    sh 'docker-compose up -d mysql'
                }
            }
        }
        stage('Deploy Springboot') {
            steps {
                sh 'docker image pull duy129/springboot'
                sh 'docker container stop springboot || echo "This container does not exists" '
                sh 'docker network create dev || echo "This network exists"'
                sh 'echo y | docker container prune'

                sh 'docker container run -d --rm --name springboot -p 8082:8080 --network dev duy129/springboot'
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}